version: '3'

volumes:
  db-data:
  yarn:
  nm-app:
  nm-admin:

services:
  app:
    build:
      dockerfile: Dockerfile-app
      context: .
    command: ["scripts/wait-for-it.sh", "db:5432", "--", "yarn", "watch"]
    volumes:
      - yarn:/usr/local/share/.cache/yarn
      - .:/app
      - /app/admin-client/
      - nm-app:/app/node_modules
    ports:
      - "1337:1337" # for the app itself
    depends_on:
      - db
      - redis
    environment:
      APP_HOSTNAME: http://localhost:1337
      DOMAIN: localhost:1337
      FEATURE_AUTH_GITHUB: 'true'
      FEATURE_AUTH_UAA: 'true'
      PORT: 1337
      PRODUCT: pages
      UAA_HOST: http://localhost:9000
      UAA_HOST_DOCKER_URL: http://uaa:8080
      USER_AUDITOR: federalist
      CLOUD_FOUNDRY_API_HOST: https://api.example.com
      CLOUD_FOUNDRY_OAUTH_TOKEN_URL: https://login.example.com/oauth/token
      CF_API_USERNAME: deploy_user
      CF_API_PASSWORD: deploy_pass      
  federalist:
    build:
      dockerfile: Dockerfile-app
      context: .
    command: ["scripts/wait-for-it.sh", "db:5432", "--", "yarn", "watch"]
    volumes:
      - yarn:/usr/local/share/.cache/yarn
      - .:/app
      - /app/admin-client/
      - nm-app:/app/node_modules
    ports:
      - "1338:1338" # for the app itself
      - "8888:8888" # for viewing analyze-webpack
      - "8080:8080" # for serving test coverage html
    depends_on:
      - db
      - redis
    environment:
      APP_HOSTNAME: http://localhost:1338
      DOMAIN: localhost:1338
      FEATURE_AUTH_GITHUB: 'true'
      FEATURE_AUTH_UAA: 'false'
      PORT: 1338
      PRODUCT: federalist
      UAA_HOST: http://localhost:9000
      UAA_HOST_DOCKER_URL: http://uaa:8080
      USER_AUDITOR: federalist
      CLOUD_FOUNDRY_API_HOST: https://api.example.com
      CLOUD_FOUNDRY_OAUTH_TOKEN_URL: https://login.example.com/oauth/token
      CF_API_USERNAME: deploy_user
      CF_API_PASSWORD: deploy_pass
  bull-board:
    build:
      dockerfile: Dockerfile-app
      context: .
    command: ["scripts/wait-for-it.sh", "redis:6379", "--", "yarn", "start-bull-board:local"]
    volumes:
      - yarn:/usr/local/share/.cache/yarn
      - .:/app
      - /app/admin-client/
      - nm-app:/app/node_modules
    ports:
      - "1340:1340"
    depends_on:
      - redis
    environment:
      ADMIN_GITHUB_ORGANIZATION: FederalistLocal
      ADMIN_GITHUB_TEAM: federalist-local-admins
      APP_ENV: local
      APP_HOSTNAME: http://localhost:1340
      PORT: 1340
      PRODUCT: federalist
      REDIS_URL: redis://redis:6379
      SESSION_SECRET: bull-board
      UAA_CLIENT_ID: pages-client
      UAA_CLIENT_SECRET: client-secret
      UAA_HOST: http://localhost:9000
      UAA_HOST_DOCKER_URL: http://uaa:8080
  admin-client:
    build:
      dockerfile: ./admin-client/Dockerfile-admin
      context: .
    volumes:
      - yarn:/usr/local/share/.cache/yarn
      - ./admin-client:/app
      - nm-admin:/app/node_modules
    ports:
      - "3000:3000"
      - "35729:35729"
    depends_on:
      - app
    command: ["yarn", "dev"]
    environment:
      API_URL: http://localhost:1337
  db:
    build:
      dockerfile: Dockerfile-db
      context: .
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # expose db on host at port 5433
    environment:
      POSTGRES_DB: federalist
      POSTGRES_TEST_DB: federalist-test
      POSTGRES_PASSWORD: password
  redis:
    image: redis
    ports:
      - 6379:6379
  worker:
    build:
      dockerfile: Dockerfile-app
      context: .
    command: ["scripts/wait-for-it.sh", "db:5432", "--", "yarn", "start-workers"]
    volumes:
      - yarn:/usr/local/share/.cache/yarn
      - .:/app
      - /app/admin-client/
      - nm-app:/app/node_modules
    depends_on:
      - db
      - redis
      - echo
    environment:
      APP_HOSTNAME: http://localhost:1337
      NODE_ENV: development
  echo:
    image: node:16
    volumes:
      - yarn:/usr/local/share/.cache/yarn
      - .:/app
      - /app/admin-client/
      - nm-app:/app/node_modules
    environment:
      HOST: 0.0.0.0
      PORT: 8989
    command: node app/scripts/echo.js