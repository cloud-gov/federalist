swagger: '2.0'
info:
  title: Federalist API
  description: API for interacting with Federalist
  version: '0.0.0'
host: federalistapp-staging.18f.gov
schemes:
  - https
basePath: /v0
produces:
  - application/json
paths:
  /build:
    post:
      summary: Create a build
      parameters:
        - name: build
          in: body
          schema:
            type: object
            properties:
              site:
                type: integer
                description: The ID of the site to build.
              branch:
                type: string
                description: |
                  The branch that should be built. If no branch is provided, the
                  site's default branch will be built.
      responses:
        200:
          description: The newly created build
          schema:
            $ref: 'Build.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          descriptions: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/build:
    get:
      summary: Fetch all of the user's builds for a given site
      responses:
        200:
          description: An array of builds
          schema:
            type: array
            items:
              $ref: 'Build.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          descriptions: Not found
          schema:
            $ref: 'Error.json'
  /build/{id}:
    parameters:
      - name: id
        in: path
        description: The id of the build
        type: integer
        required: true
    get:
      summary: Fetch a build by its ID
      responses:
        200:
          description: The build object specified by the ID
          schema:
            $ref: 'Build.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    put:
      summary: Update the build state
      responses:
        200:
          description: The build object specified by the ID
          schema:
            $ref: 'Build.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /build/{id}/status/{token}:
    parameters:
      - name: id
        in: path
        description: The id of the build
        type: integer
        required: true
      - name: token
        in: path
        description: Federalist's secret build token.
        type: string
        required: true
    post:
      summary: |
        Update a build's status. This endpoint is designed to be used by the
        build container to update the build's status when the build is done with
        its work.
      parameters:
        - name: status
          in: body
          description: The build container's status
          required: true
          schema:
            type: object
            properties:
              status:
                description: The build container's exit code
                type: string
              message:
                description: The error message associated with the build. Empty if status is "0"
                type: string
      responses:
        200:
          description: Acknowledgement that the build has been updated
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /build/{build_id}/log/{token}:
    parameters:
      - name: build_id
        in: path
        description: The id of the build
        type: integer
        required: true
      - name: token
        in: path
        description: Federalist's secret build token.
        type: string
        required: true
    post:
      summary: Add build container output to a build by creating a build log record
      responses:
        200:
          description: Acknowledgement that the build log was created
          schema:
            $ref: 'BuildLog.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /build/{build_id}/log:
    parameters:
      - name: build_id
        in: path
        description: The id of the build
        type: integer
        required: true
    get:
      summary: Fetch all build logs associated with a build
      responses:
        200:
          description: An object with the build logs associated with the build
          schema:
            type: object
            items:
              $ref: 'BuildLog.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /build/{build_id}/tasks:
    parameters:
      - name: build_id
        in: path
        description: The id of the build
        type: integer
        required: true
    get:
      summary: Fetch all build tasks associated with a build
      responses:
        200:
          description: An array with the build tasks associated with the build
          schema:
            type: array
            items:
              $ref: 'BuildTask.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /build/{build_id}/tasks/{task_id}:
    parameters:
      - name: build_id
        in: path
        description: The id of the build
        type: integer
        required: true
      - name: task_id
        in: path
        description: The id of the build task
        type: integer
        required: true
    get:
      summary: Fetch one build task associated with a build
      responses:
        200:
          description: An object with a build task matching task_id and associated with the build
          schema:
            type: object
            items:
              $ref: 'BuildTask.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /organization:
    get:
      summary: Fetch all of the current user's organizations
      responses:
        200:
          description: An array of all organizations associated with the current user
          schema:
            type: array
            items:
              $ref: 'Organization.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
  /organization/{id}:
    parameters:
      - name: id
        in: path
        description: The id of the organization
        type: integer
        required: true
    get:
      summary: Fetch an organization by its ID
      responses:
        200:
          description: The organization specified by the ID
          schema:
            $ref: 'Organization.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /organization/{org_id}/user/{user_id}:
    parameters:
      - name: org_id
        in: path
        type: integer
        description: The id of the organization
        required: true
      - name: user_id
        in: path
        type: integer
        description: The id of the target user
        required: true
    delete:
      summary: Delete the organization role if the current user has permissions
      responses:
        200:
          description: An empty object
          schema:
            type: object
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /organization/{id}/invite:
    parameters:
      - name: id
        in: path
        description: The id of the organization
        type: integer
        required: true
    post:
      summary: Invite a user to a Federalist organization and maybe the platform.
      parameters:
        - name: roleId
          in: body
          type: integer
          description: The id of the role type
          required: true
        - name: uaaEmail
          in: body
          type: string
          description: The UAA email of the invited user
          required: true
        - name: githubUsername
          in: body
          type: string
          description: The Github username of the invited user if it exists
      responses:
        200:
          description: The organization role and invite details for the invited user
          schema:
            type: object
            properties:
              member:
                description: The organization role for the invited user
                required: true
                schema:
                  $ref: 'OrganizationRole.json'
              invite:
                description: The invite details
                required: true
                schema:
                  type: object
                  properties:
                    email:
                      type: string
                      description: the UAA email for the invited user
                    link:
                      type: string
                      description: The confirmation link for the invited user
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /organization/{id}/members:
    parameters:
      - name: id
        in: path
        description: The id of the organization
        type: integer
        required: true
    get:
      summary: Fetch members for an organization by its ID
      responses:
        200:
          description: The members for the organization specified by the ID
          schema:
            type: array
            items:
              $ref: 'OrganizationRole.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /organization-role:
    get:
      summary: Fetch all of the organization roles for the current user
      responses:
        200:
          description: An array of the current users organization roles
          schema:
            type: array
            items:
              $ref: 'OrganizationRole.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
    put:
      summary: Update the organization role type if the current user has permissions
      parameters:
        - name: organizationId
          in: body
          type: integer
          description: The id of the organization
          required: true
        - name: roleId
          in: body
          type: integer
          description: The id of the role type
          required: true
        - name: userId
          in: body
          type: integer
          description: The id of the target user
          required: true
      responses:
        200:
          description: The updated organization role object
          schema:
            $ref: 'OrganizationRole.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /role:
    get:
      summary: Fetch all of the roles
      responses:
        200:
          description: An array of all roles
          schema:
            type: array
            items:
              $ref: 'Role.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
  /site:
    get:
      summary: Fetch all of the current user's sites
      responses:
        200:
          description: An array of all sites associated with the current user
          schema:
            type: array
            items:
              $ref: 'Site.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
    post:
      summary: Create a site
      parameters:
        - name: site
          in: body
          schema:
            type: object
            properties:
              demoBranch:
                type: string
                description: The name of the branch served on the demo URL
              demoDomain:
                type: string
                description: The domain where the demo branch's site is served
              config:
                type: string
                description: Jekyll configs for the site.
              defaultBranch:
                type: string
                description: The default branch for the site.
              engine:
                type: string
                description: The build engine to use when building the new site
              owner:
                type: string
                description: The owner of the GitHub repo for the site
              previewConfig:
                type: string
                description: Jekyll configs for the site in the preview environment
              demoConfig:
                type: string
                description: Jekyll configs for the site demo
              repository:
                type: string
                description: The name of the GitHub repository for the site
              template:
                type: string
                description: |
                  The name of a Federalist site template. If provided, the a new
                  repo will be created from the repo for the given template. If
                  a template is not provided, Federalist will not create a new
                  repo and will instead expect to build a site from an existing
                  repo.
      responses:
        200:
          description: The newly created site
          schema:
            $ref: 'Site.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
  /site/{id}:
    parameters:
      - name: id
        in: path
        description: The id of the site
        type: integer
        required: true
    get:
      summary: Fetch the data for a Federalist site
      responses:
        200:
          description: The site object for the given ID
          schema:
            $ref: 'Site.json'
        401:
          description: Unauthorized
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    put:
      summary: Update the data for a Federalist site. This action will trigger a rebuild of the site.
      parameters:
        - name: site
          in: body
          schema:
            type: object
            properties:
              demoBranch:
                type: string
                description: The name of the branch served on the demo URL
              demoDomain:
                type: string
                description: The domain where the demo branch's site is served
              config:
                type: string
                description: Jekyll configs for the site.
              defaultBranch:
                type: string
                description: The default branch for the site.
              domain:
                type: string
                description: The domain where the site is served
              engine:
                type: string
                description: The build engine to use when building the new site
              owner:
                type: string
                description: The owner of the GitHub repo for the site
              previewConfig:
                type: string
                description: Jekyll configs for the site in the preview environment
              demoConfig:
                type: string
                description: Jekyll configs for the site demo
              repository:
                type: string
                description: The name of the GitHub repository for the site
      responses:
        200:
          description: The updated site object
          schema:
            $ref: 'Site.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    delete:
      summary: Delete a site from Federalist
      responses:
        200:
          description: Acknowledgement that the site was deleted
          schema:
            type: object
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/domain:
    post:
      summary: Create a site domain if the current user has permissions
      parameters:
        - name: site_id
          in: path
          description: the id of the site
          type: integer
        - name: names
          in: body
          type: string
          description: The names of the domain (comma delimited)
          required: true
        - name: siteBranchConfigId
          in: body
          type: integer
          description: The id of the related site branch config
          required: true
      responses:
        200:
          description: The create site domain
          schema:
            $ref: 'Domain.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/domain/{domain_id}:
    delete:
      summary: Delete a site domain if the current user has permissions
      parameters:
        - name: site_id
          in: path
          description: the id of the site
          type: integer
        - name: domain_id
          in: path
          description: the id of the domain
          type: integer
      responses:
        200:
          description: The create site domain
          schema:
            type: object
            properties:
              message: string
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    put:
      summary: Update a site domain if the current user has permissions
      parameters:
        - name: site_id
          in: path
          description: the id of the site
          type: integer
        - name: domain_id
          in: path
          description: the id of the domain
          type: integer
        - name: names
          in: body
          type: string
          description: The names of the domain (comma delimited)
          required: false
        - name: siteBranchConfigId
          in: body
          type: integer
          description: The id of the related site branch config
          required: false
      responses:
        200:
          description: The create site domain
          schema:
            $ref: 'Domain.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/published-branch:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
    get:
      summary: Fetch all of the branches published to S3 for the given site
      responses:
        200:
          description: An array of branches published to S3
          schema:
            type: array
            items:
              $ref: 'PublishedBranch.json'
        400:
          description: Bad Request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/published-branch/{branch}:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
      - name: branch
        in: path
        description: The name of the branch
        type: string
        required: true
    get:
      summary: Fetch metadata about what's published for the site at the given branch
      responses:
        200:
          description: A published branch object representing the branch published to S3
          schema:
            $ref: 'PublishedBranch.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/published-branch/{branch}/published-file:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
      - name: branch
        in: path
        description: The name of the branch
        type: string
        required: true
      - name: startAtKey
        in: query
        description: The S3 key to start after when retrieving the page of files
        type: string
        required: false
    get:
      summary: Fetch the list of files that are published to the given branch for the given site
      responses:
        200:
          description: A paged list of files published to the branch
          schema:
            type: object
            properties:
              isTruncated:
                type: bool
                description: Indicates whether the current page of files is truncated
              files:
                type: array
                items:
                  $ref: 'PublishedFile.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/user:
    post:
      summary: Add the current user to a site based on the owner and repository name
      parameters:
        - name: site
          in: body
          schema:
            type: object
            properties:
              owner:
                type: string
                description: The owner of the GitHub repo for the site
              repository:
                type: string
                description: The name of the GitHub repository for the site
      responses:
        200:
          description: A site object representing the site the user was added to
          schema:
            $ref: 'Site.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: The site the user is to be added to cannot be found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/user/{user_id}:
    delete:
      summary: Remove a user from a site
      parameters:
        - name: site_id
          in: path
          description: the id of the site
          type: integer
        - name: user_id
          in: path
          description: the id of the user to remove from the site
          type: integer
      responses:
        200:
          schema:
            $ref: 'Site.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/user-action:
    parameters:
      - name: site_id
        in: path
        description: the id of the site
        type: integer
        required: true
    get:
      summary: Fetch all user actions for a given site
      responses:
        200:
          description: An array of UserAction records
          schema:
            $ref: 'UserAction.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/basic-auth:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
    post:
      summary: Set the basic auth credentials for a site based on the site id
      parameters:
        - name: username
          in: body
          type: string
          required: true
        - name: password
          in: body
          type: string
          required: true
      responses:
        200:
          description: An object representing the user environment variable
          schema:
            $ref: 'Site.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: The site of the user environment variable is to be added to cannot be found
          schema:
            $ref: 'Error.json'
    delete:
      summary: Remove basic auth from a site based on the site id
      responses:
        200:
          description: Delete successful
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/branch-config/{site-branch-config_id}:
    parameters:
      - name: site_id
        in: path
        description: the id of the site
        type: integer
        required: true
      - name: site-branch-config_id
        in: path
        description: the id of the site branch config from the site
        type: integer
        required: true
    delete:
      summary: Remove a site branch config from a site
      responses:
        200:
          description: Delete successful
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    put:
      summary: Update site branch config
      parameters:
        - name: site-branch-config
          in: body
          schema:
            type: object
            properties:
              branch:
                type: string
                description: The name of the branch
                required: false
              config:
                type: json
                description: The json value of the config
                required: false
              context:
                type: string
                description: The string value of the site branch config context. ie preview, demo, site, etc.
                required: false
      responses:
        200:
          description: A site branch config object representing the update config
          schema:
            $ref: 'SiteBranchConfig.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          descriptions: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/branch-config:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
    get:
      summary: Fetch the list of site branch configs for the given site
      responses:
        200:
          description: A list of site branch configs for the given site
          schema:
            type: array
            items:
              $ref: 'SiteBranchConfig.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    post:
      summary: Create a site branch config for a site based on the site id
      parameters:
        - name: site-branch-config
          in: body
          schema:
            type: object
            properties:
              branch:
                type: string
                description: The name of the branch
                required: false
              config:
                type: json
                description: The json value of the config
                required: false
              context:
                type: string
                description: The string value of the site branch config context. ie preview, demo, site, etc.
                required: false
      responses:
        200:
          description: An object representing the user environment variable
          schema:
            $ref: 'SiteBranchConfig.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: The site of the user environment variable is to be added to cannot be found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/domains:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
    get:
      summary: Get a list of domains associated to a site
      responses:
        200:
          description: An array of domains
          schema:
            type: array
            items:
              $ref: 'Domain.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: The site of the domains requested cannot be found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/user-environment-variable/{user-environment-variable_id}:
    parameters:
      - name: site_id
        in: path
        description: the id of the site
        type: integer
        required: true
      - name: user-environment-variable_id
        in: path
        description: the id of the user environment variable to remove from the site
        type: integer
        required: true
    delete:
      summary: Remove a user environment variable from a site
      responses:
        200:
          description: Delete successful
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /site/{site_id}/user-environment-variable:
    parameters:
      - name: site_id
        in: path
        description: The id of the site
        type: integer
        required: true
    get:
      summary: Fetch the list of user environment variables for the given site
      responses:
        200:
          description: A list of user environment variables for the given site
          schema:
            type: array
            items:
              $ref: 'UserEnvironmentVariable.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
    post:
      summary: Add the user environment variable to a site based on the site id
      parameters:
        - name: user-environment-variable
          schema:
            type: object
            properties:
              name:
                type: string
                description: The name of the environment variable
              value:
                type: string
                description: The value of the environment variable
      responses:
        200:
          description: An object representing the user environment variable
          schema:
            $ref: 'UserEnvironmentVariable.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: The site of the user environment variable is to be added to cannot be found
          schema:
            $ref: 'Error.json'
  /me:
    get:
      summary: Fetch data for the current user
      responses:
        200:
          description: A user object representing the current Federalist user
          schema:
            $ref: 'User.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
  /me/settings:
    put:
      summary: Update user settings
      responses:
        200:
          description: A user object representing the current Federalist user
          schema:
            $ref: 'User.json'
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
  /me/githubtoken:
    delete:
      summary: Revoke OAuth token access for this user
      responses:
        200:
          description: Always an empty object
          schema:
            type: object
  /tasks/{build_task_id}/{token}:
    parameters:
      - name: build_task_id
        in: path
        description: The id of the build task
        type: integer
        required: true
      - name: token
        in: path
        description: The build tasks secret build task token.
        type: string
        required: true
    put:
      summary: Update build task information
      responses:
        200:
          description: Acknowledgement that the build task was updated
        400:
          description: Bad request
          schema:
            $ref: 'Error.json'
        403:
          description: Not authorized
          schema:
            $ref: 'Error.json'
        404:
          description: Not found
          schema:
            $ref: 'Error.json'
  /tasks/types:
    get:
      summary: List available build task types
      responses:
        200:
          description: An arry of build task types
          schema:
            type: array
            items:
              $ref: 'BuildTaskType.json'
